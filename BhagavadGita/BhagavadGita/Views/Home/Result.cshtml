@model IEnumerable<BhagavadGita.Models.ShlokaInfo>
@{
    ViewBag.Title = "Result";
}
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.2/css/all.min.css" />
<style>
    .container {
        padding: 0px 30px !important;
        width: 100% !important;
    }

    .cardDiv {
        display: flex;
        flex-wrap: wrap;
    }

    .cards {
        margin: 10px;
        padding: 10px;
        flex: 30%;
        border: 1px solid black;
        border-radius: 5px;
    }

    .rightAlign{
        text-align: right;
        padding-right: 5px;
        vertical-align: top;
        font-weight: bolder;
    }

    .leftAlign {
        text-align: justify;
        padding-right: 5px;
        vertical-align: top;
        /*font-weight: bolder;*/
    }

    details{
        border: 1px solid gray;
        border-radius: 0.2rem;
        padding: 0.5rem;
    }

    details>summary{
        display: list-item;
        list-style-type: '▶ ';
    }

    details[open]>summary{
        list-style-type: '🔽 ';
        margin-bottom: 0.5rem;
    }
</style>
<h1>@ViewBag.ChapterName</h1>
<div>
    <select id="microsoftVoice"></select>
</div>
<div class="cardDiv">
    @foreach (var item in (IEnumerable<BhagavadGita.Models.ShlokaInfo>)ViewData["shlokas"])
    {
        <div class="cards">
            <button type="button" onclick="STT(@Html.DisplayFor(modelItem => item.ShlokaSubId))">
                <i class="fa-solid fa-volume-high"></i>
            </button>
            <table>
                <tr>
                    <td class="rightAlign" style="width: 10%;"></td>
                    <td class="leftAlign" style="width: 70%;">@Html.DisplayFor(modelItem => item.ChapterId). @Html.DisplayFor(modelItem => item.ShlokaSubId)</td>
                </tr>
                <tr>
                    <td class="rightAlign">Shloka: </td>
                    <td class="leftAlign">@Html.DisplayFor(modelItem => item.Shloka)</td>
                </tr>
                <tr>
                    <td class="rightAlign">Transliteration: </td>
                    <td class="leftAlign"><p id="para_@Html.DisplayFor(modelItem => item.ShlokaSubId)">@Html.DisplayFor(modelItem => item.Transliteration)</p></td>
                </tr>
                <tr>
                    <td class="rightAlign">ShlokaTrans: </td>
                    <td class="leftAlign">@Html.DisplayFor(modelItem => item.ShlokaTrans)</td>
                </tr>
                <tr>
                    <td>&nbsp;</td>
                    <td>&nbsp;</td>
                </tr>
                <tr>
                    <td class="rightAlign">Notes: </td>
                    <td class="leftAlign">@Html.DisplayFor(modelItem => item.Notes)</td>
                </tr>
                <tr>
                    <td>&nbsp;</td>
                    <td>&nbsp;</td>
                </tr>
                @if (@Html.DisplayFor(modelItem => item.Purport).ToString() == "" || @Html.DisplayFor(modelItem => item.Purport).ToString() == null)
                {
                    <tr>
                        <td></td>
                        <td>Purport Not Available</td>
                    </tr>
                }
                else
                {
                    <tr>
                        <td colspan="2">
                            <details>
                                <summary>Click here for Purport</summary>
                                <p>
                                    @Html.DisplayFor(modelItem => item.Purport)
                                </p>
                            </details>
                        </td>
                    </tr>
                }
                @*<tr>
            <td colspan="2">
                <a href="#" class="btn btn-lg btn-warning" data-toggle="modal" data-target="#largeModal">Click to open Modal</a>
            </td>
        </tr>*@
            </table>
            @*<p>@Html.DisplayFor(modelItem => item.Purport)</p>*@
            <!-- large modal -->
            <div class="modal fade" id="largeModal" tabindex="-1" role="dialog" aria-labelledby="basicModal" aria-hidden="true">
              <div class="modal-dialog modal-lg">
                <div class="modal-content">
                  <div class="modal-header">
                      <h4 class="modal-title" id="myModalLabel">Shloka @Html.DisplayFor(modelItem => item.ShlokaId).@Html.DisplayFor(modelItem => item.ShlokaSubId)</h4>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                      <span aria-hidden="true">&times;</span>
                    </button>
                  </div>
                  <div class="modal-body">
                    <p>
                        @Html.DisplayFor(modelItem => item.Purport)
                    </p>
                  </div>
                  <div class="modal-footer">
                    <button type="button" class="btn btn-danger" data-dismiss="modal">Close</button>
                  </div>
                </div>
              </div>
            </div>
        </div>

    }
</div>

<script src="~/Scripts/MicrosoftAudioDD.js"></script>
<script>
    function STT(num) {
        // Get the value of Microsoft's Audio Drop Down
        var Audio_DD = document.getElementById("microsoftVoice");
        var Audio_Val = Audio_DD.value;
        //alert(Audio_Val);

        // Get the text from the Paragraph of Respective Shloka
        var para = document.getElementById("para_" + num);
        console.log(para.innerHTML);

        // Create a new SpeechSynthesisUtterance object
        let utterance = new SpeechSynthesisUtterance();

        // Set the text and voice of the utterance
        utterance.text = para.innerHTML;
        utterance.voice = window.speechSynthesis.getVoices()[Audio_Val];

        // Speak the utterance
        window.speechSynthesis.speak(utterance);
    }
</script>